version: "2"

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"
    networks:
      - dev_network

  kafka:
    container_name: kafka
    image: kainrehck/advanced_db:kafka-clickhouse-connector_x86
    # any environment variable beginning with KAFKA_CFG_ will be mapped to its corresponding Apache Kafka key.
    #  For example, use KAFKA_CFG_BACKGROUND_THREADS in order to set background.threads
    links:
      - zookeeper
      - clickhouse-server
    environment:
      - KAFKA_CFG_NODE_ID=0
      - ALLOW_PLAINTEXT_LISTENER=yes  # the listener will be without authentication and non-encrypted
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - dev_network
    ports:
      - "9093:9093"
      - "9092:9092"
    volumes:
      - /home/cherniak/itmo_advanced_db/docker/clickhouse_sink_connector_config/clickhouse_sink_connector.properties:/opt/bitnami/kafka/config/clickhouse_sink_connector.properties

  # kafka-connect:
  #   container_name: kafka-connect
  #   image:  kainrehck/advanced_db:kafka-connect_x86
  #   links:
  #     - zookeeper
  #     - kafka
  #     - clickhouse-server
  #   environment:
  #     - CONNECT_NAME=clickhouse-connect
  #     - CONNECT_CONNECTOR_CLASS=com.clickhouse.kafka.connect.ClickHouseSinkConnector
  #     - CONNECT_TASKS_MAX=1
  #     - CONNECT_ERRORS_RETRY_TIMEOUT=60
  #     - CONNECT_SSL=false
  #     - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
  #     - CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE=false
  #     - CONNECT_EXACTLYONCE=true
  #     - CONNECT_DATABASE=sensor_storage
  #     - CONNECT_HOSTNAME=clickhouse-server
  #     - CONNECT_PORT=8123
  #     - CONNECT_USERNAME=default
  #     - CONNECT_PASSWORD=12345
  #     - CONNECT_TOPICS=sensors_data
  #     - CONNECT_CONSUMER_MAX_POLL_RECORDS=10000

  #     - CONNECT_BOOTSTRAP_SERVERS=kafka:9092
  #     - CONNECT_GROUP_ID=clickhouse-sink
  #     - CONNECT_CONFIG_STORAGE_TOPIC=clickhouse-sink-config
  #     - CONNECT_OFFSET_STORAGE_TOPIC=clickhouse-sink-offsets
  #     - CONNECT_STATUS_STORAGE_TOPIC=clickhouse-sink-status
  #     - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
  #     - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
  #     - CONNECT_PLUGIN_PATH=/usr/share/java
  #     - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
  #   networks:
  #     - dev_network
  #   ports:
  #     - "8083:8083"


  sensor_data_generator:
    container_name: sensor_data_generator
    image: kainrehck/advanced_db:sensor_data_generator_x86
    environment:
      - KAFKA_BROKERS=kafka:9092
      - AGGREGATION_FREQUENCY=1
      - N_SENSORS=1000
      - TOPIC_NAME=sensors_data
      - FAILURE_RATE=0.05
      - RESPONSE_RATE=0.8
    networks:
      - dev_network
    entrypoint: python3 data_generator.py
    links:
      - kafka

  clickhouse-server:
    container_name: clickhouse-server
    image: clickhouse/clickhouse-server:23.11.2.11
    volumes:
      - /home/cherniak/itmo_advanced_db/clickhouse_storage:/var/lib/clickhouse  # Clickhouse persistent storage.
      - /home/cherniak/itmo_advanced_db/docker/clickhouse_initialization:/docker-entrypoint-initdb.d  # Directory with database initialization scripts.
      - /home/cherniak/itmo_advanced_db/docker/clickhouse_config/config.xml:/etc/clickhouse-server/config.xml
    links:
      - zookeeper
    environment:
      - CLICKHOUSE_PASSWORD=12345 # Change this to your desired password
    ports:
      - "8123:8123" # HTTP port
      - "9000:9000" # Native client port
      - "9009:9009" # Native replication port
    networks:
      - dev_network

  lenses:
    container_name: lenses
    image: kainrehck/advanced_db:lenses_x86
    environment:
      - CLICKHOUSE_HOST=clickhouse-server
    networks:
      - dev_network
    ports:
      - "5432:5432"
    entrypoint: flask --app lenses run --host 0.0.0.0 --port 5432 --no-debug

networks:
  dev_network:
    driver: bridge
